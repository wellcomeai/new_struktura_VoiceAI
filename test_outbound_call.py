"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–≤–æ–Ω–∫–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import asyncio
import httpx
import json

# –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï VOXIMPLANT
REAL_DATA = {
    "account_id": "9758383",
    "api_key": "c87130a0-5f46-44f8-9401-154947094986",
    "rule_id": "7957687",
    "script_custom_data": json.dumps({
        "phone_number": "+79500968479",
        "assistant_id": "test-assistant-id",  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        "caller_id": "74951087163"
    })
}

async def test_real_call():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("\n" + "="*70)
    print("üöÄ –¢–ï–°–¢ –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò VOXIMPLANT")
    print("="*70)
    
    BASE_URL = "https://voicyfy.ru"
    ENDPOINT = f"{BASE_URL}/api/voximplant/start-outbound-call"
    
    print(f"\nüìç URL: {ENDPOINT}")
    print(f"\nüì¶ –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:")
    print(f"   Account ID: {REAL_DATA['account_id']}")
    print(f"   API Key: {REAL_DATA['api_key'][:20]}...")
    print(f"   Rule ID: {REAL_DATA['rule_id']}")
    
    script_data = json.loads(REAL_DATA['script_custom_data'])
    print(f"   Phone: {script_data['phone_number']}")
    print(f"   Caller ID: {script_data['caller_id']}")
    print(f"   Assistant ID: {script_data['assistant_id']}")
    
    try:
        async with httpx.AsyncClient(timeout=60.0) as client:
            print("\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å...")
            
            response = await client.post(
                ENDPOINT,
                json=REAL_DATA,
                headers={
                    "Content-Type": "application/json",
                    "Accept": "application/json"
                }
            )
            
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   Headers: {dict(response.headers)}")
            
            try:
                response_json = response.json()
                print(f"\nüìÑ –û—Ç–≤–µ—Ç (JSON):")
                print(json.dumps(response_json, indent=2, ensure_ascii=False))
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                if response.status_code == 200:
                    if response_json.get("success"):
                        print("\n‚úÖ –£–°–ü–ï–•! –ó–≤–æ–Ω–æ–∫ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω!")
                        if "call_id" in response_json:
                            print(f"   Call ID: {response_json['call_id']}")
                    else:
                        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {response_json.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                        
                        # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏
                        if "Authorization failed" in response_json.get('message', ''):
                            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:")
                            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Account ID –≤ Voximplant")
                            print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API Key –≤ Voximplant")
                            print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ API –∫–ª—é—á–∞")
                        elif "Rule" in response_json.get('message', ''):
                            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò RULE:")
                            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ Rule ID: 7957687")
                            print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–∞–≤–∏–ª–∞")
                        elif "phone" in response_json.get('message', '').lower():
                            print("\nüîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–®–ò–ë–ö–ò –ù–û–ú–ï–†–ê:")
                            print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞: +79500968479")
                            print("   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Caller ID: 74951087163")
                else:
                    print(f"\n‚ùå HTTP –û–®–ò–ë–ö–ê: {response.status_code}")
                    
            except json.JSONDecodeError:
                print(f"\nüìÑ –û—Ç–≤–µ—Ç (TEXT):")
                print(response.text)
                
    except httpx.TimeoutException:
        print("\n‚è±Ô∏è –¢–ê–ô–ú–ê–£–¢: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è")
    except httpx.ConnectError:
        print("\nüîå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
    except Exception as e:
        print(f"\n‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()

async def test_voximplant_api_directly():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º Voximplant API –Ω–∞–ø—Ä—è–º—É—é"""
    print("\n" + "="*70)
    print("üî¨ –ü–†–Ø–ú–û–ô –¢–ï–°–¢ VOXIMPLANT API")
    print("="*70)
    
    # URL Voximplant API
    VOXIMPLANT_URL = "https://api.voximplant.com/platform_api/StartScenarios/"
    
    params = {
        "account_id": REAL_DATA["account_id"],
        "api_key": REAL_DATA["api_key"],
        "rule_id": REAL_DATA["rule_id"],
        "script_custom_data": REAL_DATA["script_custom_data"]
    }
    
    print(f"\nüìç URL: {VOXIMPLANT_URL}")
    print(f"üì¶ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    for key, value in params.items():
        if key == "api_key":
            print(f"   {key}: {value[:20]}...")
        elif key == "script_custom_data":
            print(f"   {key}: {value[:50]}...")
        else:
            print(f"   {key}: {value}")
    
    try:
        async with httpx.AsyncClient(timeout=30.0) as client:
            print("\nüöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Voximplant...")
            
            response = await client.post(
                VOXIMPLANT_URL,
                data=params
            )
            
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            try:
                response_json = response.json()
                print(f"\nüìÑ –û—Ç–≤–µ—Ç –æ—Ç Voximplant:")
                print(json.dumps(response_json, indent=2, ensure_ascii=False))
                
                if response_json.get("result"):
                    print("\n‚úÖ Voximplant API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
                else:
                    print(f"\n‚ùå –û—à–∏–±–∫–∞ Voximplant: {response_json.get('error', 'Unknown')}")
                    
            except json.JSONDecodeError:
                print(f"\nüìÑ –û—Ç–≤–µ—Ç (TEXT): {response.text}")
                
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("\n" + "üîß"*35)
    print("–ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò")
    print("üîß"*35)
    
    # –¢–µ—Å—Ç 1: –ß–µ—Ä–µ–∑ –Ω–∞—à —ç–Ω–¥–ø–æ–∏–Ω—Ç
    await test_real_call()
    
    # –¢–µ—Å—Ç 2: –ù–∞–ø—Ä—è–º—É—é –≤ Voximplant API
    await test_voximplant_api_directly()
    
    print("\n" + "‚úÖ"*35)
    print("–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
    print("‚úÖ"*35 + "\n")

if __name__ == "__main__":
    asyncio.run(main())
