"""Add ElevenLabs models and user api key

Revision ID: add_elevenlabs_models
Revises: fix_start_plan_price_1490
Create Date: 2025-07-18 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_elevenlabs_models'
down_revision = 'fix_start_plan_price_1490'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü ElevenLabs –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è elevenlabs_api_key –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    """
    connection = op.get_bind()
    
    # ‚úÖ 1. –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ elevenlabs_api_key –≤ —Ç–∞–±–ª–∏—Ü—É users (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        result = connection.execute(sa.text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            AND column_name = 'elevenlabs_api_key'
        """)).fetchone()
        
        if not result:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ elevenlabs_api_key –≤ —Ç–∞–±–ª–∏—Ü—É users...")
            op.add_column('users', sa.Column('elevenlabs_api_key', sa.String(), nullable=True))
            print("‚úÖ –ü–æ–ª–µ elevenlabs_api_key –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Ç–∞–±–ª–∏—Ü—É users")
        else:
            print("‚úÖ –ü–æ–ª–µ elevenlabs_api_key —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ users")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è elevenlabs_api_key: {str(e)}")
    
    # ‚úÖ 2. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É elevenlabs_agents (–µ—Å–ª–∏ –µ—ë –Ω–µ—Ç)
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        result = connection.execute(sa.text("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = 'elevenlabs_agents'
            );
        """)).fetchone()
        
        if not result[0]:
            print("‚ûï –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É elevenlabs_agents...")
            op.create_table(
                'elevenlabs_agents',
                sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, server_default=sa.text('gen_random_uuid()')),
                sa.Column('user_id', postgresql.UUID(as_uuid=True), sa.ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
                sa.Column('elevenlabs_agent_id', sa.String(), nullable=True),
                sa.Column('name', sa.String(), nullable=False),
                sa.Column('system_prompt', sa.Text(), nullable=True),
                sa.Column('voice_id', sa.String(), nullable=False),
                sa.Column('voice_name', sa.String(), nullable=True),
                sa.Column('is_active', sa.Boolean(), default=True, nullable=False),
                sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False),
                sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False)
            )
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_agents —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_agents —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã elevenlabs_agents: {str(e)}")
    
    # ‚úÖ 3. –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É elevenlabs_conversations (–µ—Å–ª–∏ –µ—ë –Ω–µ—Ç)
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        result = connection.execute(sa.text("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_schema = 'public' 
                AND table_name = 'elevenlabs_conversations'
            );
        """)).fetchone()
        
        if not result[0]:
            print("‚ûï –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É elevenlabs_conversations...")
            op.create_table(
                'elevenlabs_conversations',
                sa.Column('id', postgresql.UUID(as_uuid=True), primary_key=True, server_default=sa.text('gen_random_uuid()')),
                sa.Column('agent_id', postgresql.UUID(as_uuid=True), sa.ForeignKey('elevenlabs_agents.id', ondelete='CASCADE'), nullable=False),
                sa.Column('elevenlabs_conversation_id', sa.String(), nullable=True),
                sa.Column('user_message', sa.Text(), nullable=True),
                sa.Column('agent_response', sa.Text(), nullable=True),
                sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=False)
            )
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_conversations —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_conversations —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã elevenlabs_conversations: {str(e)}")
    
    print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è ElevenLabs –º–æ–¥–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def downgrade() -> None:
    """
    –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ - —É–¥–∞–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏ –ø–æ–ª—è
    """
    print("‚ö†Ô∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ ElevenLabs...")
    
    # –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    try:
        op.drop_table('elevenlabs_conversations')
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_conversations —É–¥–∞–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã elevenlabs_conversations: {str(e)}")
    
    try:
        op.drop_table('elevenlabs_agents')
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ elevenlabs_agents —É–¥–∞–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã elevenlabs_agents: {str(e)}")
    
    try:
        op.drop_column('users', 'elevenlabs_api_key')
        print("‚úÖ –ü–æ–ª–µ elevenlabs_api_key —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã users")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—è elevenlabs_api_key: {str(e)}")
    
    print("üîÑ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ ElevenLabs –∑–∞–≤–µ—Ä—à–µ–Ω")
