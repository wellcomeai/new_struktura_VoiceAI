// ============= TABS CONTENT RENDERING =============

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø KNOWLEDGE BASE

function renderKnowledgeBase() {
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–∞ knowledge base
  const knowledgeTab = document.getElementById('knowledge-tab');
  if (!knowledgeTab) return;
  
  knowledgeTab.innerHTML = `
    <div class="card">
      <h3 style="margin-bottom: 1.5rem; color: var(--text-dark);">
        <i class="fas fa-book" style="color: var(--primary-blue); margin-right: 0.5rem;"></i>
        –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∞–≥–µ–Ω—Ç–∞
      </h3>
      
      <p style="color: var(--text-gray); margin-bottom: 2rem; line-height: 1.6;">
        –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –¥–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—É—Ä—Å—ã –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é. 
        –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ–º–æ–∂–µ—Ç –∞–≥–µ–Ω—Ç—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ –∏–ª–∏ —É—Å–ª—É–≥–µ.
        <strong>–í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É—é—Ç—Å—è –¥–ª—è RAG.</strong>
      </p>
      
      <div class="knowledge-base-section">
        <h4 style="margin-bottom: 1rem;">üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤</h4>
        
        <div class="upload-area" id="file-upload-area">
          <div class="upload-icon">
            <i class="fas fa-cloud-upload-alt"></i>
          </div>
          <p><strong>–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞</strong> –∏–ª–∏ <span style="color: var(--primary-blue); cursor: pointer;" id="file-select-text">–≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã</span></p>
          <p style="font-size: 0.875rem; color: var(--text-light); margin-top: 0.5rem;">
            –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è: PDF, TXT, DOCX, MD (–¥–æ 20MB –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä)<br>
            <strong>–§–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É—é—Ç—Å—è –¥–ª—è RAG –ø–æ–∏—Å–∫–∞</strong>
          </p>
          <input type="file" id="file-upload-input" multiple accept=".pdf,.txt,.docx,.md" style="display: none;">
        </div>
        
        <div id="knowledge-files" class="knowledge-files" style="display: none;">
          <h4 style="margin-bottom: 0.5rem;">–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</h4>
          <div id="knowledge-files-list">
            <!-- –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
          </div>
        </div>
      </div>
      
      <div class="knowledge-base-section">
        <h4 style="margin-bottom: 1rem;">üåê URL-—Ä–µ—Å—É—Ä—Å—ã</h4>
        
        <div class="form-group">
          <label for="knowledge-url">–î–æ–±–∞–≤–∏—Ç—å URL –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞</label>
          <div style="display: flex; gap: 0.5rem;">
            <input type="url" id="knowledge-url" class="form-control" placeholder="https://example.com/docs">
            <button type="button" class="btn btn-primary" id="add-url-btn">
              <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å
            </button>
          </div>
          <p style="margin-top: 0.5rem; color: var(--text-gray); font-size: 0.875rem;">
            –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –¥–ª—è RAG
          </p>
        </div>
        
        <div id="knowledge-urls" style="display: none;">
          <h4 style="margin-bottom: 0.5rem;">–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ URL:</h4>
          <div id="knowledge-urls-list">
            <!-- –°–ø–∏—Å–æ–∫ URL –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
          </div>
        </div>
      </div>
      
      <div class="knowledge-base-section">
        <h4 style="margin-bottom: 1rem;">‚úèÔ∏è –ü—Ä—è–º–æ–π –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞</h4>
        
        <div class="form-group">
          <label for="knowledge-text">–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</label>
          <textarea id="knowledge-text" class="form-control" 
                    placeholder="FAQ, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –∫–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ç–æ–≤..." 
                    style="min-height: 200px;"></textarea>
          <button type="button" class="btn btn-primary" id="add-text-btn" style="margin-top: 0.5rem;">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç
          </button>
          <p style="margin-top: 0.5rem; color: var(--text-gray); font-size: 0.875rem;">
            <strong>–¢–µ–∫—Å—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è RAG –ø–æ–∏—Å–∫–∞</strong>
          </p>
        </div>
        
        <div id="knowledge-texts" style="display: none;">
          <h4 style="margin-bottom: 0.5rem;">–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã:</h4>
          <div id="knowledge-texts-list">
            <!-- –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
          </div>
        </div>
      </div>
      
      <div class="knowledge-stats">
        <div class="stat-item">
          <div class="stat-value" id="kb-files-count">0</div>
          <div class="stat-label">–§–∞–π–ª–æ–≤</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="kb-urls-count">0</div>
          <div class="stat-label">URL</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="kb-texts-count">0</div>
          <div class="stat-label">–¢–µ–∫—Å—Ç–æ–≤</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="kb-size">0 KB</div>
          <div class="stat-label">–†–∞–∑–º–µ—Ä</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="kb-chars">0</div>
          <div class="stat-label">–°–∏–º–≤–æ–ª–æ–≤</div>
        </div>
        <div class="stat-item">
          <div class="stat-value" id="kb-indexed-count" style="color: var(--success-color);">0</div>
          <div class="stat-label">–ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ</div>
        </div>
      </div>
    </div>
  `;
  
  updateKnowledgeStats();
  renderKnowledgeFiles();
  renderKnowledgeUrls();
  renderKnowledgeTexts();
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
function updateKnowledgeStats() {
  const kbFilesCount = document.getElementById('kb-files-count');
  const kbUrlsCount = document.getElementById('kb-urls-count');
  const kbTextsCount = document.getElementById('kb-texts-count');
  const kbSize = document.getElementById('kb-size');
  const kbChars = document.getElementById('kb-chars');
  const kbIndexedCount = document.getElementById('kb-indexed-count');
  
  if (kbFilesCount) kbFilesCount.textContent = window.knowledgeBase.files.length;
  if (kbUrlsCount) kbUrlsCount.textContent = window.knowledgeBase.urls.length;
  if (kbTextsCount) kbTextsCount.textContent = window.knowledgeBase.texts.length;
  if (kbSize) kbSize.textContent = formatFileSize(window.knowledgeBase.totalSize);
  if (kbChars) kbChars.textContent = window.knowledgeBase.totalChars.toLocaleString();
  
  // ‚úÖ –ù–û–í–û–ï: –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
  if (kbIndexedCount) {
    const indexedFiles = window.knowledgeBase.files.filter(f => f.document_id && f.status === 'uploaded').length;
    const indexedUrls = window.knowledgeBase.urls.filter(u => u.document_id).length;
    const indexedTexts = window.knowledgeBase.texts.filter(t => t.document_id).length;
    const totalIndexed = indexedFiles + indexedUrls + indexedTexts;
    
    kbIndexedCount.textContent = totalIndexed;
    console.log('üìä –ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:', totalIndexed);
  }
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –ø–æ–ª–Ω—ã–º ID
function renderKnowledgeFiles() {
  const knowledgeFiles = document.getElementById('knowledge-files');
  const knowledgeFilesList = document.getElementById('knowledge-files-list');
  
  if (!knowledgeFiles || !knowledgeFilesList) return;
  
  if (window.knowledgeBase.files.length === 0) {
    knowledgeFiles.style.display = 'none';
    return;
  }
  
  knowledgeFiles.style.display = 'block';
  knowledgeFilesList.innerHTML = '';
  
  window.knowledgeBase.files.forEach((file, index) => {
    const fileElement = document.createElement('div');
    fileElement.className = `knowledge-file ${file.status || 'uploaded'}`;
    
    // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
    let statusIcon = '';
    let statusText = '';
    
    switch (file.status) {
      case 'uploading':
        statusIcon = '<i class="fas fa-spinner fa-spin" style="color: var(--primary-blue);"></i>';
        statusText = '–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è...';
        break;
      case 'uploaded':
        statusIcon = '<i class="fas fa-check-circle" style="color: var(--success-color);"></i>';
        statusText = '–ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è RAG';
        break;
      case 'error':
        statusIcon = '<i class="fas fa-exclamation-triangle" style="color: var(--error-color);"></i>';
        statusText = '–û—à–∏–±–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏';
        break;
      default:
        statusIcon = '<i class="fas fa-file" style="color: var(--text-light);"></i>';
        statusText = '–ó–∞–≥—Ä—É–∂–µ–Ω';
    }
    
    fileElement.innerHTML = `
      <div class="file-info">
        <div class="file-icon">
          <i class="fas fa-file-${getFileIcon(file.name || file.filename)}"></i>
        </div>
        <div class="file-details">
          <div class="file-name">
            ${file.name || file.filename || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
            ${file.document_id ? `
              <div style="font-size: 0.75rem; color: var(--text-light); margin-top: 0.25rem;">
                ID: <code style="background: var(--bg-light); padding: 0.1rem 0.3rem; border-radius: 0.25rem;">${file.document_id}</code>
              </div>
            ` : ''}
          </div>
          <div class="file-size">${formatFileSize(file.size)} ‚Ä¢ ${file.chars || 0} —Å–∏–º–≤–æ–ª–æ–≤</div>
          <div style="display: flex; align-items: center; gap: 0.5rem; margin-top: 0.25rem;">
            ${statusIcon}
            <span style="font-size: 0.75rem; color: var(--text-gray);">${statusText}</span>
          </div>
          ${file.error ? `<div style="color: var(--error-color); font-size: 0.75rem;">–û—à–∏–±–∫–∞: ${file.error}</div>` : ''}
        </div>
      </div>
      <button class="btn btn-mini btn-danger" onclick="removeKnowledgeFile(${index})" ${file.status === 'uploading' ? 'disabled' : ''}>
        <i class="fas fa-trash"></i>
      </button>
    `;
    knowledgeFilesList.appendChild(fileElement);
  });
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è URL —Å –ø–æ–ª–Ω—ã–º ID
function renderKnowledgeUrls() {
  const knowledgeUrls = document.getElementById('knowledge-urls');
  const knowledgeUrlsList = document.getElementById('knowledge-urls-list');
  
  if (!knowledgeUrls || !knowledgeUrlsList) return;
  
  if (window.knowledgeBase.urls.length === 0) {
    knowledgeUrls.style.display = 'none';
    return;
  }
  
  knowledgeUrls.style.display = 'block';
  knowledgeUrlsList.innerHTML = '';
  
  window.knowledgeBase.urls.forEach((urlData, index) => {
    const urlElement = document.createElement('div');
    urlElement.className = 'knowledge-file';
    
    // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–ª—è URL
    const statusIcon = urlData.document_id ? 
      '<i class="fas fa-check-circle" style="color: var(--success-color);"></i>' : 
      '<i class="fas fa-clock" style="color: var(--warning-color);"></i>';
    const statusText = urlData.document_id ? '–ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è RAG' : '–û–∂–∏–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏';
    
    urlElement.innerHTML = `
      <div class="file-info">
        <div class="file-icon">
          <i class="fas fa-globe"></i>
        </div>
        <div class="file-details">
          <div class="file-name">
            <a href="${urlData.url}" target="_blank" style="color: var(--primary-blue); text-decoration: none;">
              ${urlData.title || urlData.url}
            </a>
            ${urlData.document_id ? `
              <div style="font-size: 0.75rem; color: var(--text-light); margin-top: 0.25rem;">
                ID: <code style="background: var(--bg-light); padding: 0.1rem 0.3rem; border-radius: 0.25rem;">${urlData.document_id}</code>
              </div>
            ` : ''}
          </div>
          <div class="file-size">${urlData.chars || 0} —Å–∏–º–≤–æ–ª–æ–≤</div>
          <div style="display: flex; align-items: center; gap: 0.5rem; margin-top: 0.25rem;">
            ${statusIcon}
            <span style="font-size: 0.75rem; color: var(--text-gray);">${statusText}</span>
          </div>
        </div>
      </div>
      <button class="btn btn-mini btn-danger" onclick="removeKnowledgeUrl(${index})">
        <i class="fas fa-trash"></i>
      </button>
    `;
    knowledgeUrlsList.appendChild(urlElement);
  });
}

// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ê —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ —Å –ø–æ–ª–Ω—ã–º ID
function renderKnowledgeTexts() {
  const knowledgeTexts = document.getElementById('knowledge-texts');
  const knowledgeTextsList = document.getElementById('knowledge-texts-list');
  
  if (!knowledgeTexts || !knowledgeTextsList) return;
  
  if (window.knowledgeBase.texts.length === 0) {
    knowledgeTexts.style.display = 'none';
    return;
  }
  
  knowledgeTexts.style.display = 'block';
  knowledgeTextsList.innerHTML = '';
  
  window.knowledgeBase.texts.forEach((textData, index) => {
    const textElement = document.createElement('div');
    textElement.className = 'knowledge-file';
    
    // ‚úÖ –£–õ–£–ß–®–ï–ù–ù–û–ï –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤
    const statusIcon = textData.document_id ? 
      '<i class="fas fa-check-circle" style="color: var(--success-color);"></i>' : 
      '<i class="fas fa-clock" style="color: var(--warning-color);"></i>';
    const statusText = textData.document_id ? '–ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω –¥–ª—è RAG' : '–û–∂–∏–¥–∞–µ—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏';
    
    textElement.innerHTML = `
      <div class="file-info">
        <div class="file-icon">
          <i class="fas fa-file-text"></i>
        </div>
        <div class="file-details">
          <div class="file-name">
            ${textData.title || `–¢–µ–∫—Å—Ç ${index + 1}`}
            ${textData.document_id ? `
              <div style="font-size: 0.75rem; color: var(--text-light); margin-top: 0.25rem;">
                ID: <code style="background: var(--bg-light); padding: 0.1rem 0.3rem; border-radius: 0.25rem;">${textData.document_id}</code>
              </div>
            ` : ''}
          </div>
          <div class="file-size">${textData.chars || 0} —Å–∏–º–≤–æ–ª–æ–≤</div>
          <div style="display: flex; align-items: center; gap: 0.5rem; margin-top: 0.25rem;">
            ${statusIcon}
            <span style="font-size: 0.75rem; color: var(--text-gray);">${statusText}</span>
          </div>
          <div style="color: var(--text-gray); font-size: 0.875rem; margin-top: 0.25rem; max-height: 2.4em; overflow: hidden; line-height: 1.2;">
            ${textData.content ? textData.content.substring(0, 100) + (textData.content.length > 100 ? '...' : '') : ''}
          </div>
        </div>
      </div>
      <button class="btn btn-mini btn-danger" onclick="removeKnowledgeText(${index})">
        <i class="fas fa-trash"></i>
      </button>
    `;
    knowledgeTextsList.appendChild(textElement);
  });
}

function getFileIcon(filename) {
  const ext = filename.split('.').pop().toLowerCase();
  switch (ext) {
    case 'pdf': return 'pdf';
    case 'doc':
    case 'docx': return 'word';
    case 'txt': return 'alt';
    case 'md': return 'markdown';
    default: return 'alt';
  }
}

function formatFileSize(bytes) {
  if (bytes === 0) return '0 B';
  const k = 1024;
  const sizes = ['B', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];
}

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø DYNAMIC VARIABLES

function renderDynamicVariables() {
  const personalizationTab = document.getElementById('personalization-tab');
  if (!personalizationTab) return;
  
  personalizationTab.innerHTML = `
    <div class="card">
      <h3 style="margin-bottom: 1.5rem; color: var(--text-dark);">
        <i class="fas fa-user-edit" style="color: var(--primary-blue); margin-right: 0.5rem;"></i>
        –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      </h3>
      
      <p style="color: var(--text-gray); margin-bottom: 2rem; line-height: 1.6;">
        –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å {{variable_name}} –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –ø—Ä–æ–º–ø—Ç–µ –∏ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
        <strong>–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ ElevenLabs –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.</strong>
      </p>
      
      <div class="variables-section">
        <h4 style="margin-bottom: 1rem;">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ</h4>
        
        <div id="dynamic-variables-list">
          <!-- –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
        
        <button type="button" class="btn btn-outline" id="add-variable-btn">
          <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        </button>
        
        <div style="margin-top: 2rem;">
          <h5 style="margin-bottom: 1rem;">üí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</h5>
          <div style="background-color: var(--bg-light); padding: 1rem; border-radius: var(--radius-md); font-family: monospace; font-size: 0.875rem;">
            <div>–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç: "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ {{company_name}}. –û–±—Ä–∞—â–∞–π—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {{user_name}}."</div>
            <div style="margin-top: 0.5rem;">–ü–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "–ü—Ä–∏–≤–µ—Ç, {{user_name}}! –Ø –ø–æ–º–æ—â–Ω–∏–∫ {{company_name}}. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"</div>
          </div>
        </div>
      </div>
      
      <div class="system-variables-info">
        <h4><i class="fas fa-info-circle"></i> –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:</h4>
        <ul>
          <li>{{system__agent_id}} - ID –∞–≥–µ–Ω—Ç–∞</li>
          <li>{{system__time_utc}} - –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC</li>
          <li>{{system__conversation_id}} - ID —Ä–∞–∑–≥–æ–≤–æ—Ä–∞</li>
          <li>{{system__caller_id}} - –ù–æ–º–µ—Ä –∑–≤–æ–Ω—è—â–µ–≥–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∑–≤–æ–Ω–∫–æ–≤)</li>
          <li>{{system__call_duration_secs}} - –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–≤–æ–Ω–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö</li>
        </ul>
      </div>
    </div>
  `;
  
  renderVariablesList();
}

function renderVariablesList() {
  const dynamicVariablesList = document.getElementById('dynamic-variables-list');
  if (!dynamicVariablesList) return;
  
  dynamicVariablesList.innerHTML = '';
  
  window.dynamicVariables.forEach((variable, index) => {
    addVariableToDOM(variable, index);
  });
  
  if (window.dynamicVariables.length === 0) {
    dynamicVariablesList.innerHTML = `
      <div style="text-align: center; color: var(--text-gray); padding: 2rem;">
        <i class="fas fa-plus-circle" style="font-size: 2rem; margin-bottom: 1rem;"></i>
        <p>–ù–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è.</p>
      </div>
    `;
  }
}

function addVariableToDOM(variable, index) {
  const dynamicVariablesList = document.getElementById('dynamic-variables-list');
  if (!dynamicVariablesList) return;
  
  const variableElement = document.createElement('div');
  variableElement.className = 'variable-item';
  variableElement.innerHTML = `
    <div class="variable-name">
      <input type="text" class="form-control" placeholder="–∏–º—è_–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π" 
             value="${variable.name || ''}" onchange="updateVariable(${index}, 'name', this.value)">
    </div>
    <div class="variable-value">
      <input type="text" class="form-control" placeholder="–ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π" 
             value="${variable.value || ''}" onchange="updateVariable(${index}, 'value', this.value)">
    </div>
    <div class="variable-options">
      <button class="btn btn-small btn-danger" onclick="removeVariable(${index})">
        <i class="fas fa-trash"></i>
      </button>
    </div>
  `;
  dynamicVariablesList.appendChild(variableElement);
}

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø TOOLS

function renderTools() {
  const toolsTab = document.getElementById('tools-tab');
  if (!toolsTab) return;
  
  toolsTab.innerHTML = `
    <div class="card">
      <h3 style="margin-bottom: 1.5rem; color: var(--text-dark);">
        <i class="fas fa-tools" style="color: var(--primary-blue); margin-right: 0.5rem;"></i>
        –í–Ω–µ—à–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
      </h3>
      
      <p style="color: var(--text-gray); margin-bottom: 2rem; line-height: 1.6;">
        –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–Ω–µ—à–Ω–∏–µ API –∏ —Å–µ—Ä–≤–∏—Å—ã, —á—Ç–æ–±—ã –∞–≥–µ–Ω—Ç –º–æ–≥ –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –≤—ã–ø–æ–ª–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏—è.
        <strong>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É—é—Ç—Å—è —Å ElevenLabs Function Calling.</strong>
      </p>
      
      <div class="tools-section">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <h4>üåê –°–µ—Ä–≤–µ—Ä–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (Webhooks)</h4>
          <button type="button" class="btn btn-primary" id="add-server-tool-btn">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å webhook
          </button>
        </div>
        
        <div id="server-tools-list">
          <!-- –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
      </div>
      
      <div class="tools-section" style="margin-top: 2rem;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
          <h4>üíª –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã</h4>
          <button type="button" class="btn btn-primary" id="add-client-tool-btn">
            <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
          </button>
        </div>
        
        <div id="client-tools-list">
          <!-- –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
        
        <div style="margin-top: 1rem; padding: 1rem; background-color: var(--bg-blue-light); border-radius: var(--radius-md);">
          <h5 style="color: var(--primary-blue); margin-bottom: 0.5rem;">
            <i class="fas fa-info-circle"></i> –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π:
          </h5>
          <ul style="margin: 0; padding-left: 1.5rem; color: var(--text-gray); font-size: 0.875rem;">
            <li><code>showNotification(message, type)</code> - –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</li>
            <li><code>navigateTo(url)</code> - –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
            <li><code>openModal(content)</code> - –æ—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</li>
            <li><code>updateUI(element, data)</code> - –æ–±–Ω–æ–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</li>
          </ul>
        </div>
      </div>
    </div>
  `;
  
  renderServerTools();
  renderClientTools();
}

function renderServerTools() {
  const serverToolsList = document.getElementById('server-tools-list');
  if (!serverToolsList) return;
  
  serverToolsList.innerHTML = '';
  
  window.serverTools.forEach((tool, index) => {
    addServerToolToDOM(tool, index);
  });
  
  if (window.serverTools.length === 0) {
    serverToolsList.innerHTML = `
      <div style="text-align: center; color: var(--text-gray); padding: 2rem; border: 1px dashed var(--border-color); border-radius: var(--radius-md);">
        <i class="fas fa-plus-circle" style="font-size: 2rem; margin-bottom: 1rem;"></i>
        <p>–ù–µ—Ç —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. –î–æ–±–∞–≤—å—Ç–µ webhook –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π.</p>
      </div>
    `;
  }
}

function addServerToolToDOM(tool, index) {
  const serverToolsList = document.getElementById('server-tools-list');
  if (!serverToolsList) return;
  
  const toolElement = document.createElement('div');
  toolElement.className = 'tool-item';
  toolElement.innerHTML = `
    <div class="tool-header">
      <div class="tool-name">${tool.name || '–ù–æ–≤—ã–π webhook'}</div>
      <div class="tool-type-badge tool-type-server">Server</div>
    </div>
    
    <div class="tool-config">
      <div class="form-group">
        <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏</label>
        <input type="text" class="form-control" placeholder="get_weather" 
               value="${tool.name || ''}" onchange="updateServerTool(${index}, 'name', this.value)">
      </div>
      
      <div class="form-group">
        <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
        <input type="text" class="form-control" placeholder="–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è –≥–æ—Ä–æ–¥–∞" 
               value="${tool.description || ''}" onchange="updateServerTool(${index}, 'description', this.value)">
      </div>
      
      <div class="form-group">
        <label>URL</label>
        <input type="url" class="form-control" placeholder="https://api.example.com/weather" 
               value="${tool.url || ''}" onchange="updateServerTool(${index}, 'url', this.value)">
      </div>
      
      <div class="form-group">
        <label>–ú–µ—Ç–æ–¥</label>
        <select class="form-control method-select" onchange="updateServerTool(${index}, 'method', this.value)">
          <option value="GET" ${tool.method === 'GET' ? 'selected' : ''}>GET</option>
          <option value="POST" ${tool.method === 'POST' ? 'selected' : ''}>POST</option>
          <option value="PUT" ${tool.method === 'PUT' ? 'selected' : ''}>PUT</option>
          <option value="DELETE" ${tool.method === 'DELETE' ? 'selected' : ''}>DELETE</option>
        </select>
      </div>
      
      <div class="tool-config-full">
        <label>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã (JSON Schema)</label>
        <textarea class="form-control" placeholder='{"type": "object", "properties": {"city": {"type": "string", "description": "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"}}}' 
                  onchange="updateServerTool(${index}, 'parameters', this.value)">${tool.parameters || ''}</textarea>
        <p style="margin-top: 0.5rem; color: var(--text-gray); font-size: 0.875rem;">
          JSON Schema –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π ElevenLabs Function Calling
        </p>
      </div>
    </div>
    
    <div style="display: flex; justify-content: flex-end; gap: 0.5rem; margin-top: 1rem;">
      <button class="btn btn-small btn-outline" onclick="testServerTool(${index})">
        <i class="fas fa-flask"></i> –¢–µ—Å—Ç
      </button>
      <button class="btn btn-small btn-danger" onclick="removeServerTool(${index})">
        <i class="fas fa-trash"></i>
      </button>
    </div>
  `;
  serverToolsList.appendChild(toolElement);
}

function renderClientTools() {
  const clientToolsList = document.getElementById('client-tools-list');
  if (!clientToolsList) return;
  
  clientToolsList.innerHTML = '';
  
  window.clientTools.forEach((tool, index) => {
    addClientToolToDOM(tool, index);
  });
  
  if (window.clientTools.length === 0) {
    clientToolsList.innerHTML = `
      <div style="text-align: center; color: var(--text-gray); padding: 2rem; border: 1px dashed var(--border-color); border-radius: var(--radius-md);">
        <i class="fas fa-plus-circle" style="font-size: 2rem; margin-bottom: 1rem;"></i>
        <p>–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π. –î–æ–±–∞–≤—å—Ç–µ JavaScript —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.</p>
      </div>
    `;
  }
}

function addClientToolToDOM(tool, index) {
  const clientToolsList = document.getElementById('client-tools-list');
  if (!clientToolsList) return;
  
  const toolElement = document.createElement('div');
  toolElement.className = 'tool-item';
  toolElement.innerHTML = `
    <div class="tool-header">
      <div class="tool-name">${tool.name || '–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è'}</div>
      <div class="tool-type-badge tool-type-client">Client</div>
    </div>
    
    <div class="tool-config">
      <div class="form-group">
        <label>–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏</label>
        <input type="text" class="form-control" placeholder="showNotification" 
               value="${tool.name || ''}" onchange="updateClientTool(${index}, 'name', this.value)">
      </div>
      
      <div class="form-group">
        <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
        <input type="text" class="form-control" placeholder="–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é" 
               value="${tool.description || ''}" onchange="updateClientTool(${index}, 'description', this.value)">
      </div>
      
      <div class="tool-config-full">
        <label>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã (JSON Schema)</label>
        <textarea class="form-control" placeholder='{"type": "object", "properties": {"message": {"type": "string"}, "type": {"type": "string", "enum": ["info", "success", "warning", "error"]}}}' 
                  onchange="updateClientTool(${index}, 'parameters', this.value)">${tool.parameters || ''}</textarea>
        <p style="margin-top: 0.5rem; color: var(--text-gray); font-size: 0.875rem;">
          JSON Schema –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π ElevenLabs Function Calling
        </p>
      </div>
      
      <div class="tool-config-full">
        <label>JavaScript –∫–æ–¥</label>
        <textarea class="form-control" placeholder="function showNotification(message, type) { /* –≤–∞—à –∫–æ–¥ */ }" 
                  style="min-height: 120px;" onchange="updateClientTool(${index}, 'code', this.value)">${tool.code || ''}</textarea>
      </div>
    </div>
    
    <div style="display: flex; justify-content: flex-end; gap: 0.5rem; margin-top: 1rem;">
      <button class="btn btn-small btn-outline" onclick="testClientTool(${index})">
        <i class="fas fa-flask"></i> –¢–µ—Å—Ç
      </button>
      <button class="btn btn-small btn-danger" onclick="removeClientTool(${index})">
        <i class="fas fa-trash"></i>
      </button>
    </div>
  `;
  clientToolsList.appendChild(toolElement);
}

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø SYSTEM TOOLS

function renderSystemTools() {
  const systemToolsTab = document.getElementById('system-tools-tab');
  if (!systemToolsTab) return;
  
  systemToolsTab.innerHTML = `
    <div class="card">
      <h3 style="margin-bottom: 1.5rem; color: var(--text-dark);">
        <i class="fas fa-cogs" style="color: var(--primary-blue); margin-right: 0.5rem;"></i>
        –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
      </h3>
      
      <p style="color: var(--text-gray); margin-bottom: 2rem; line-height: 1.6;">
        –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–º: –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤, –ø–µ—Ä–µ–¥–∞—á–∞ –∞–≥–µ–Ω—Ç–∞–º, –ø–µ—Ä–µ–¥–∞—á–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º.
        <strong>–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ ElevenLabs –ø–ª–∞—Ç—Ñ–æ—Ä–º—É.</strong>
      </p>
      
      <div class="system-tools-grid">
        <!-- –ê–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ -->
        <div class="system-tool-card" id="end-call-tool">
          <div class="system-tool-header">
            <div class="system-tool-icon">üîö</div>
            <div>
              <div class="system-tool-title">–ê–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤</div>
              <label style="margin-top: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                <input type="checkbox" id="enable-end-call">
                <span>–í–∫–ª—é—á–∏—Ç—å</span>
              </label>
            </div>
          </div>
          <div class="system-tool-description">
            –ê–≥–µ–Ω—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä, –∫–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∑–∞–∫–æ–Ω—á–∏—Ç—å –±–µ—Å–µ–¥—É.
          </div>
          <div class="system-tool-config" id="end-call-config" style="display: none;">
            <div class="form-group">
              <label>–ö–ª—é—á–µ–≤—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:</label>
              <textarea class="form-control" id="end-call-phrases" 
                        placeholder="–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è, —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å, –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ"
                        style="min-height: 80px;"></textarea>
            </div>
          </div>
        </div>
        
        <!-- –ü–µ—Ä–µ–¥–∞—á–∞ –º–µ–∂–¥—É –∞–≥–µ–Ω—Ç–∞–º–∏ -->
        <div class="system-tool-card" id="agent-transfer-tool">
          <div class="system-tool-header">
            <div class="system-tool-icon">üîÑ</div>
            <div>
              <div class="system-tool-title">–ü–µ—Ä–µ–¥–∞—á–∞ –º–µ–∂–¥—É –∞–≥–µ–Ω—Ç–∞–º–∏</div>
              <label style="margin-top: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                <input type="checkbox" id="enable-agent-transfer">
                <span>–í–∫–ª—é—á–∏—Ç—å</span>
              </label>
            </div>
          </div>
          <div class="system-tool-description">
            –ü–µ—Ä–µ–¥–∞—á–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∞–≥–µ–Ω—Ç–∞–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
          </div>
          <div class="system-tool-config" id="agent-transfer-config" style="display: none;">
            <div class="form-group">
              <label>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏:</label>
              <div id="transfer-agents-list">
                <div style="display: flex; gap: 0.5rem; margin-bottom: 0.5rem;">
                  <input type="text" class="form-control" placeholder="ID –∞–≥–µ–Ω—Ç–∞" style="flex: 1;">
                  <input type="text" class="form-control" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" style="flex: 2;">
                  <button type="button" class="btn btn-small btn-danger">
                    <i class="fas fa-trash"></i>
                  </button>
                </div>
              </div>
              <button type="button" class="btn btn-small btn-outline" id="add-transfer-agent">
                <i class="fas fa-plus"></i> –î–æ–±–∞–≤–∏—Ç—å –∞–≥–µ–Ω—Ç–∞
              </button>
            </div>
          </div>
        </div>
        
        <!-- –ü–µ—Ä–µ–¥–∞—á–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É -->
        <div class="system-tool-card" id="human-handoff-tool">
          <div class="system-tool-header">
            <div class="system-tool-icon">üë§</div>
            <div>
              <div class="system-tool-title">–ü–µ—Ä–µ–¥–∞—á–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É</div>
              <label style="margin-top: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                <input type="checkbox" id="enable-human-handoff">
                <span>–í–∫–ª—é—á–∏—Ç—å</span>
              </label>
            </div>
          </div>
          <div class="system-tool-description">
            –ü–µ—Ä–µ–¥–∞—á–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —á–µ–ª–æ–≤–µ–∫—É-–æ–ø–µ—Ä–∞—Ç–æ—Ä—É –ø—Ä–∏ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö –∏–ª–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
          </div>
          <div class="system-tool-config" id="human-handoff-config" style="display: none;">
            <div class="form-group">
              <label>–ù–æ–º–µ—Ä –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏:</label>
              <input type="tel" class="form-control" id="handoff-phone" placeholder="+1234567890">
            </div>
            <div class="form-group">
              <label>–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞:</label>
              <textarea class="form-control" id="handoff-operator-message" 
                        placeholder="–ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –∏–∑ AI –∞–≥–µ–Ω—Ç–∞..."
                        style="min-height: 80px;"></textarea>
            </div>
            <div class="form-group">
              <label>–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:</label>
              <textarea class="form-control" id="handoff-customer-message" 
                        placeholder="–ü–µ—Ä–µ–¥–∞—é –≤–∞—Å –Ω–∞—à–µ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É..."
                        style="min-height: 80px;"></textarea>
            </div>
          </div>
        </div>
        
        <!-- –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ -->
        <div class="system-tool-card" id="language-detection-tool">
          <div class="system-tool-header">
            <div class="system-tool-icon">üåê</div>
            <div>
              <div class="system-tool-title">–ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞</div>
              <label style="margin-top: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                <input type="checkbox" id="enable-language-detection">
                <span>–í–∫–ª—é—á–∏—Ç—å</span>
              </label>
            </div>
          </div>
          <div class="system-tool-description">
            –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∞–≥–µ–Ω—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
          </div>
          <div class="system-tool-config" id="language-detection-config" style="display: none;">
            <div class="form-group">
              <label>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏:</label>
              <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 0.5rem;">
                <label><input type="checkbox" value="en"> üá∫üá∏ English</label>
                <label><input type="checkbox" value="ru"> üá∑üá∫ –†—É—Å—Å–∫–∏–π</label>
                <label><input type="checkbox" value="es"> üá™üá∏ Espa√±ol</label>
                <label><input type="checkbox" value="fr"> üá´üá∑ Fran√ßais</label>
                <label><input type="checkbox" value="de"> üá©üá™ Deutsch</label>
                <label><input type="checkbox" value="it"> üáÆüáπ Italiano</label>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
  
  updateSystemToolsState();
}

function updateSystemToolsState() {
  const enableEndCall = document.getElementById('enable-end-call');
  const enableAgentTransfer = document.getElementById('enable-agent-transfer');
  const enableHumanHandoff = document.getElementById('enable-human-handoff');
  const enableLanguageDetection = document.getElementById('enable-language-detection');
  
  if (enableEndCall) enableEndCall.checked = window.systemTools.endCall;
  if (enableAgentTransfer) enableAgentTransfer.checked = window.systemTools.agentTransfer;
  if (enableHumanHandoff) enableHumanHandoff.checked = window.systemTools.humanHandoff;
  if (enableLanguageDetection) enableLanguageDetection.checked = window.systemTools.languageDetection;
  
  toggleSystemToolConfig('end-call', window.systemTools.endCall);
  toggleSystemToolConfig('agent-transfer', window.systemTools.agentTransfer);
  toggleSystemToolConfig('human-handoff', window.systemTools.humanHandoff);
  toggleSystemToolConfig('language-detection', window.systemTools.languageDetection);
}

function toggleSystemToolConfig(toolName, enabled) {
  const configElement = document.getElementById(`${toolName}-config`);
  const cardElement = document.getElementById(`${toolName}-tool`);
  
  if (configElement) {
    configElement.style.display = enabled ? 'block' : 'none';
  }
  
  if (cardElement) {
    if (enabled) {
      cardElement.classList.add('enabled');
    } else {
      cardElement.classList.remove('enabled');
    }
  }
}

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø TESTING

function renderTesting() {
  const testingTab = document.getElementById('testing-tab');
  if (!testingTab) return;
  
  testingTab.innerHTML = `
    <div class="card testing-section">
      <h3 style="margin-bottom: 1rem;">üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π –ø—Ä–æ–±–ª–µ–º</h3>
      <p style="color: var(--text-gray); margin-bottom: 2rem;">
        –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ª–æ–∫–∞–ª—å–Ω—ã–º VAD –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π ElevenLabs —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.
        <strong>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ API.</strong>
      </p>
      
      <!-- –°–¢–ê–¢–£–° –°–û–ï–î–ò–ù–ï–ù–ò–Ø -->
      <div class="testing-status">
        <div class="status-item" id="connection-status">
          <div class="status-indicator disconnected"></div>
          <span>WebSocket: –û—Ç–∫–ª—é—á–µ–Ω</span>
        </div>
        <div class="status-item" id="agent-status">
          <div class="status-indicator disconnected"></div>
          <span>–ê–≥–µ–Ω—Ç: –ì–æ—Ç–æ–≤</span>
        </div>
        <div class="status-item" id="microphone-status">
          <i class="fas fa-microphone"></i>
          <span>–ú–∏–∫—Ä–æ—Ñ–æ–Ω: –ì–æ—Ç–æ–≤</span>
        </div>
        <div class="status-item" id="voice-status">
          <i class="fas fa-volume-up"></i>
          <span>–ì–æ–ª–æ—Å: <span id="selected-voice-name">-</span></span>
        </div>
      </div>
      
      <!-- ‚úÖ –£–õ–£–ß–®–ï–ù–ù–´–ï –ê–£–î–ò–û –ò–ù–î–ò–ö–ê–¢–û–†–´ -->
      <div class="audio-indicators" id="audio-indicators" style="display: none;">
        <div class="audio-indicator">
          <span style="font-weight: 500;">–°–µ—Ä–≤–µ—Ä–Ω—ã–π VAD</span>
          <div class="volume-bar-container">
            <div class="volume-bar" id="server-vad-bar"></div>
          </div>
          <span id="server-vad-score">0.00</span>
        </div>
        <div class="audio-indicator">
          <span style="font-weight: 500;">–õ–æ–∫–∞–ª—å–Ω—ã–π VAD</span>
          <div class="volume-bar-container">
            <div class="volume-bar" id="local-vad-bar"></div>
          </div>
          <span id="local-vad-score">0.00</span>
        </div>
        <div class="audio-indicator">
          <span style="font-weight: 500;">–£—Ä–æ–≤–µ–Ω—å –≤—Ö–æ–¥–∞</span>
          <div class="volume-bar-container">
            <div class="volume-bar" id="input-volume-bar"></div>
          </div>
          <span id="input-volume">0%</span>
        </div>
        <div class="user-speaking-indicator" id="user-speaking-indicator">
          <i class="fas fa-microphone"></i>
          <span id="user-speaking-text">–ú–æ–ª—á–∞–Ω–∏–µ</span>
        </div>
      </div>
      
      <!-- ‚úÖ –î–ò–ê–ì–ù–û–°–¢–ò–ß–ï–°–ö–ê–Ø –ü–ê–ù–ï–õ–¨ -->
      <div id="diagnostic-panel" class="diagnostic-panel" style="display: none;">
        <h4><i class="fas fa-exclamation-triangle"></i> –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º</h4>
        <div id="diagnostic-items">
          <!-- –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è —Å—é–¥–∞ -->
        </div>
      </div>
      
      <!-- –ö–ù–û–ü–ö–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø -->
      <div id="testing-controls">
        <button class="btn btn-primary" id="start-test-btn">
          <i class="fas fa-play"></i> –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        </button>
        <button class="btn btn-outline" id="stop-test-btn" style="display: none;">
          <i class="fas fa-stop"></i> –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
        </button>
        <button class="btn btn-secondary" id="retry-connection-btn" style="display: none;">
          <i class="fas fa-redo"></i> –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        </button>
        <button class="btn btn-warning" id="test-microphone-btn">
          <i class="fas fa-microphone-alt"></i> –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∏–∫—Ä–æ—Ñ–æ–Ω
        </button>
      </div>
      
      <!-- –ú–ï–¢–†–ò–ö–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò -->
      <div id="performance-metrics" class="performance-metrics" style="display: none;">
        <h4><i class="fas fa-chart-line"></i> –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</h4>
        <div class="metrics-grid">
          <div class="metric-item">
            <div class="metric-label">–í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</div>
            <div class="metric-value" id="connection-time">0—Å</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–π</div>
            <div class="metric-value" id="interruptions-count">0</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">–ê—É–¥–∏–æ —á–∞–Ω–∫–æ–≤</div>
            <div class="metric-value" id="audio-chunks-count">0</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">RTT</div>
            <div class="metric-value" id="rtt-value">0–º—Å</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">–í—Ä–µ–º—è —Å–µ—Å—Å–∏–∏</div>
            <div class="metric-value" id="session-duration">0—Å</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">VAD —Å–æ–±—ã—Ç–∏—è</div>
            <div class="metric-value" id="vad-events-count">0</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">–¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏</div>
            <div class="metric-value" id="transcript-events-count">0</div>
          </div>
          <div class="metric-item">
            <div class="metric-label">–ö–∞—á–µ—Å—Ç–≤–æ –±—É—Ñ–µ—Ä–∞</div>
            <div class="metric-value" id="buffer-health">100%</div>
          </div>
        </div>
      </div>
      
      <div style="margin-top: 2rem; color: var(--text-gray); font-size: 0.875rem;">
        <p><i class="fas fa-info-circle"></i> <strong>–†–µ–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ElevenLabs API:</strong></p>
        <ul style="margin: 0.5rem 0 0 1.5rem; line-height: 1.6;">
          <li>‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç—Å—è –¥–ª—è RAG –ø–æ–∏—Å–∫–∞</li>
          <li>‚úÖ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏</li>
          <li>‚úÖ –í–Ω–µ—à–Ω–∏–µ API –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ Function Calling</li>
          <li>‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –≤—Å—Ç—Ä–æ–µ–Ω—ã –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É</li>
          <li>‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π VAD –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</li>
          <li>‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º</li>
        </ul>
      </div>
    </div>
  `;
}

// ‚úÖ –§–£–ù–ö–¶–ò–ò –î–õ–Ø EMBED

function renderEmbed() {
  const embedTab = document.getElementById('embed-tab');
  if (!embedTab) return;
  
  embedTab.innerHTML = `
    <div class="card">
      <h3 style="margin-bottom: 1rem;">–ö–æ–¥ –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è</h3>
      <p>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∞ —Å–≤–æ–π —Å–∞–π—Ç, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é.</p>
      
      <div class="embed-container">
        <div class="embed-code" id="embed-code">
          <!-- –ö–æ–¥ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
        <div style="display: flex; justify-content: flex-end; margin-top: 1rem;">
          <button class="btn btn-primary" id="copy-embed-code">
            <i class="fas fa-copy"></i> –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥
          </button>
        </div>
      </div>
      
      <div style="margin-top: 1.5rem; padding: 1rem; background-color: var(--bg-blue-light); border-radius: var(--radius-md);">
        <h5 style="color: var(--primary-blue); margin-bottom: 0.5rem;">
          <i class="fas fa-info-circle"></i> –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ –≤ –≤–∏–¥–∂–µ—Ç:
        </h5>
        <ul style="margin: 0; padding-left: 1.5rem; color: var(--text-gray); font-size: 0.875rem;">
          <li>üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</li>
          <li>üéõÔ∏è –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏</li>
          <li>üîß –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ API</li>
          <li>ü§ñ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</li>
          <li>üéµ –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≥–æ–ª–æ—Å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</li>
        </ul>
      </div>
    </div>
    
    <div class="card">
      <h3 style="margin-bottom: 1rem;">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
      <p>–¢–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –≤–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ —Å–∞–π—Ç–µ:</p>
      
      <div style="margin-top: 1.5rem; text-align: center;">
        <div style="display: inline-block; position: relative;">
          <div style="width: 400px; height: 300px; background-color: #f3f4f6; border: 1px dashed #d1d5db; border-radius: 0.5rem; display: flex; justify-content: center; align-items: center;">
            <div style="position: absolute; bottom: 20px; right: 20px; width: 60px; height: 60px; border-radius: 50%; background: linear-gradient(135deg, #6366f1, #8b5cf6); display: flex; justify-content: center; align-items: center; color: white; box-shadow: 0 4px 15px rgba(99, 102, 241, 0.4);">
              <i class="fas fa-microphone" style="font-size: 1.5rem;"></i>
            </div>
          </div>
          <div style="margin-top: 0.5rem; font-size: 0.875rem; color: var(--text-gray);">–ü—Ä–∏–º–µ—Ä –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ —Å –≤–∏–¥–∂–µ—Ç–æ–º –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞</div>
        </div>
      </div>
    </div>
  `;
}

// ============= –≠–ö–°–ü–û–†–¢ –§–£–ù–ö–¶–ò–ô =============

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
window.renderKnowledgeBase = renderKnowledgeBase;
window.updateKnowledgeStats = updateKnowledgeStats;
window.renderKnowledgeFiles = renderKnowledgeFiles;
window.renderKnowledgeUrls = renderKnowledgeUrls;
window.renderKnowledgeTexts = renderKnowledgeTexts;
window.formatFileSize = formatFileSize;
window.getFileIcon = getFileIcon;

window.renderDynamicVariables = renderDynamicVariables;
window.renderVariablesList = renderVariablesList;
window.addVariableToDOM = addVariableToDOM;

window.renderTools = renderTools;
window.renderServerTools = renderServerTools;
window.renderClientTools = renderClientTools;
window.addServerToolToDOM = addServerToolToDOM;
window.addClientToolToDOM = addClientToolToDOM;

window.renderSystemTools = renderSystemTools;
window.updateSystemToolsState = updateSystemToolsState;
window.toggleSystemToolConfig = toggleSystemToolConfig;

window.renderTesting = renderTesting;
window.renderEmbed = renderEmbed;
